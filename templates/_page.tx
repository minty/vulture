<html>
  <head>
    <style>
      body {
        font-family: sans-serif;
      }
      .run h1 a {
        text-decoration: none;
        color: 000;
      }
      .run h1 a:hover {
        text-decoration: underline;
      }
      #log {
        height: 20em;
        overflow: auto;
      }
      #log p               { color: #ccc; font-size: 80% }
      #log p:nth-child(1)  { color: #000 }
      #log p:nth-child(2)  { color: #333 }
      #log p:nth-child(3)  { color: #666 }
      #log p:nth-child(4)  { color: #999 }
      .clientlist {
        font-size: 85%;
        line-height: 1.5em;
        padding: 0;
        list-style: none;
      }
      .clientlist > li {
         border-bottom: 1px dashed #ccc;
         padding-bottom: 0.75em;
      }
      .clientlist > li:last-child {
        border: none;
      }
      .iplist li a,
      .agentlist li a,
      .clientlist li a {
        text-decoration: none;
        color: #000;
      }
      .iplist li a:hover,
      .agentlist li a:hover,
      .clientlist ul li a:hover,
      .clientlist li.active .eject:hover {
        cursor: pointer;
        text-decoration: underline;
      }
      .clientlist li.left {
        text-decoration: line-through;
      }
      .clientlist li.left,
      .clientlist li.left a {
        color: #ccc;
      }
      .hq iframe,
      .taskedit iframe {
        position: absolute;
        right: 0;
        top: 0;
        z-index: -1;
        width: 800px;
        height: 100%;
      }
      .taskedit input[name="id"],
      .taskedit input[name="url"] {
        width: 30em;
      }
      #console {
        font-size: 80%;
        margin-left: 1em;
        color: #666;
      }
    </style>
    <script type="text/javascript" src="/jquery.js"></script>
    <script type="text/javascript">
        function l(m) { console.log(m) }
        function log(msg) {
            var dt = new Date;
            $('#log').prepend(
                $('<p></p>').text(dt + ' : ' + msg)
            );
        }
        /* This would be called from a specific task.  It's passed a function
         * ref, that we want to inject and run in the scope of the iframe */
        function work(func) {
            var script = document.createElement('script');
            script.type = 'text/javascript';
            script.class = 'autoscript';
            script.textContent = '(' + func.toString() + ')()';
            var iframe = $('iframe');
            var target = $( iframe.get(0).contentWindow.document );
            var frame_head = $('head',target).get(0);
            frame_head.appendChild(script);

            // Update the server with results so far, once per work() call.
            // Defined in hq.html.tx.  Thus if we're called from task/edit,
            // send_result won't be defined.
            if (typeof send_result != 'undefined') {
                send_result(
                    'update',
                    task_id,
                    job_id,
                    task_log
                );
            }
        }
        {
            var _code;
            var loading = false;
            function _using() {
                if (typeof $('iframe').get(0).contentWindow.jQuery == 'undefined') {
                    setTimeout('_using()', 100);
                    return;
                }
                else {
                    loading = false;
                    _code();
                }
            }
            function using(library, code) {
                if (library != 'jquery') {
                    alert('Invalid library ' + library + ' passed to using()');
                    return;
                }
                if (!loading && typeof $('iframe').get(0).contentWindow.jQuery == 'undefined') {
                    loading = true;
                    work(function() {
                        (function() {
                            var a=document.createElement("script");
                            a.src="/jquery.js";
                            a.type="text/javascript";
                            document.getElementsByTagName("head")[0].appendChild(a)
                        })();
                        console.log('jQuery injected into iframe');
                    });
                }
                _code = code;
                _using();
            }
        }

        var task_log = [];
        var task_id;
        var job_id;

        function clear_log() { task_log = [] }
        function is(got, expected, test_name) {
            ok( got == expected, test_name );
        }
        function isnt(got, expected, test_name) {
            ok( got != expected, test_name );
        }
        function ok(result, test_name) {
            var res = result ? 'OK' : 'NOT OK';
            task_log.push( '[' + res + '] ' + test_name );
        }

      $(function() {
        $('.clientlist li.active .eject').on('click', function(e) {
        var o = $(this).parents('li.active');
        console.log(o.data('id'));
        console.log(o.data('app_id'));
        console.log(o.data('client_id'));
        console.log(o.data('agent'));
        $.ajax('[% api_base() %]/api/client/eject/' + o.data('id'), {
            'success': function(data) {
                console.log(data);
                if (typeof data.left != 'undefined') {
                    o.removeClass('active').addClass('left');
                }
            },
            'error': function(xhr, status) {
                console.log('error ejecting client ' + o.data('id') + ' ' + status);
            }
        });
      });
    });
    </script>
  </head>
  <body class="[% body_class || 'empty' %]">[% content %]</body>
</html>
