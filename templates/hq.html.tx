[% WRAPPER "_page.tx" WITH body_class = 'hq', type = 'index' %]

<iframe></iframe>

<h1>client hq</h1>

<input id=start type=button value="[S]tart working">
<input id=stop  type=button value="[S]top working" disabled=disabled>
<input id=state type=button value="[C]urrent state">
<input id=clear type=button value="clear [l]og">

<div id=log></div>

<script type="text/javascript">
    var client_id = GUID();
    var working = false;
    var jqXHR;
    var timer;

    function tick() {
        if (!working) return;
        update_state();
        setTimeout(tick, 300000); /* 5 mins */
    }

    function stop_working() {
        if (working) working = false;
        if (jqXHR)   jqXHR.abort();
    }

    function disconnect(code) {
        stop_working();
        $.ajax('[% api_base() %]/api/client/leave/', {
            'data': {
                'app_id':    localStorage.app_id,
                'client_id': client_id,
            },
            'success': code,
        });
    }

    function get_state(on_success) {
        $.ajax('[% api_base() %]/api/client/state/', {
            'data': {
                'app_id':    localStorage.app_id,
                'client_id': client_id,
            },
            'success': function(data) { on_success(data) }
        });
    }

    function update_state() {
        get_state(function(data) {
            var ident = 'for ' + localStorage.app_id + ' / ' + client_id;
            if (data.active) {
                var state = working ? '&' : 'but not';
                log('Joined ' + state + ' working ' + ident);
                $('#start').attr('disabled', 'disabled');
                $('#stop').attr('disabled', false);
            }
            else {
                stop_working();
                var state = working ? 'but, oddly, ' : '& not';
                log('Disconnceted ' + state + ' working ' + ident);
                $('#start').attr('disabled', false);
                $('#stop').attr('disabled', 'disabled');
            }
        });
    }

    function send_result(state, run_id, job_id) {

        var results = task_log;
        clear_log();

        $.each(results, function(i, elem) {
            log(elem);
        });

        if (state != 'update') state = 'done';

        $.ajax('[% api_base() %]/api/run/' + state, {
            'data'   : {
                'run_id'    : run_id,
                'job_id'    : job_id,
                'result'    : results,
                'app_id'    : localStorage.app_id,
                'client_id' : client_id
            },
            'success': function(data) {
                if (state == 'done') {
                    $('.autoscript').remove();
                    do_work();
                }
            }
        });
    }
    window.onbeforeunload = function() {
        return "Sure?  It'll reset your session";
    }

    function GUID () {
        var S4 = function () {
            return Math.floor(
                Math.random() * 0x10000 /* 65536 */
            ).toString(16);
        };
        return (S4() + S4() + '-' + S4() + S4() + '-' + S4() + S4());
    }
    if (!localStorage.app_id) localStorage.app_id = GUID();
    function do_work() {
        if (!working) {
            clearTimeout(timer);
            return;
        }
        var iframe = $('iframe');
        var start = (new Date).getTime();
        jqXHR = $.ajax('[% api_base() %]/api/run/get', {
            'data': {
                'app_id':    localStorage.app_id,
                'client_id': client_id,
            },
            'success': function(data) {
                if (data.run) {
                    var task = data.run.run;
                    var msg = '';
                    iframe.attr('src', task.task_data.url );
                    iframe.off('load.autoscript');
                    iframe.on('load.autoscript', function() {
                        task_id = task.id;
                        job_id  = task.job_id;
                        counter = 1;
                        try {
                            run_task( task.id, task.task );
                            $('.autoscript').remove();
                        } catch(e) {
                            task_log.push( '[NOT OK] try/catch failed when running task' );
                        }
                        send_result(
                            'done',
                            task.id,
                            task.job_id,
                            task_log
                        );
                    });
                }
                else if (data.error) {
                    console.log(data.error.slug);
                    update_state();
                }
                else if (data.retry == 1) {
                    // do nothing, just return & we'll poll for more work
                    do_work();
                }
                else {
                    console.log('Unexpected response to api/run/get');
                    console.log(data);
                    update_state();
                }
            },
            'error': function(jqXHR, textStatus) {
                clearTimeout(timer);
                timer = setTimeout(do_work, 60000);
            }
        });
    }
    function run_task(id, tests) {
        log('finished loading, running task');

        clear_log();

        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.class = 'autoscript';
        script.textContent = tests;
        $('head').get(0).appendChild(script);

        var dt = new Date;
        log('finished running task ' + id + ' run at ' + dt);
    }
  $(function() {

    $('#start').on('click', function(e) {
        $.ajax('[% api_base() %]/api/client/join/', {
            'data': {
                'app_id':    localStorage.app_id,
                'client_id': client_id,
            },
            'success': function(data) {
                working = true;
                tick();
                do_work();
            }
        });
    });

    $('#stop').on('click', function(e) {
        disconnect(function(data) {
            if (typeof data.left == 'undefined') {
                log('An error occured when disconnecting');
            }
            update_state();
        });
    });

    $('#state').on('click', function(e) {
        update_state();
    });

    $('#clear').on('click', function(e) {
        $('#log').html('');
    });

    $('body').on('keydown', function(e) {
        if (e.which == 83) {
            var what = $('#start').attr('disabled') == 'disabled' ? 'stop' : 'start';
            $('#'+what).click();
        }
        else if (e.which == 67) {
            update_state();
        }
        else if (e.which == 76) {
            $('#clear').click();
        }
    });
    tick();

  });
</script>
[% END %]
